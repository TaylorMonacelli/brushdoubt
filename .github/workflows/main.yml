name: CI
"on":
  push: null
  schedule:
  - cron: 01 13 * * SAT
env:
  DISTRO: amazonlinux
  DISTRO_FILE: image-amazonlinux.yaml
  IMAGE_NAME: local-amazon-image
  CONTAINER_NAME: amazon
  ARCH: x86_64
  RELEASE: 2.0.20220606.1
  TEST_FILE: amazonlinux.sh
jobs:
  lxc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
#    - uses: whywaita/setup-lxd@v1
#      with:
#        lxd_version: latest/stable
    - name: Install distrobuilder
      run: |
        sudo ./setup_runner.sh
        echo DISTRO=$DISTRO CONTAINER_NAME=$CONTAINER_NAME DISTRO_FILE=$DISTRO_FILE ARCH=$ARCH

        rm -f lxd.tar.xz rootfs.squashfs
        sudo distrobuilder build-lxd $DISTRO_FILE -o image.architecture=$ARCH -o image.release=$RELEASE
        sudo lxc image import lxd.tar.xz rootfs.squashfs --alias $IMAGE_NAME
        sudo lxc image list

    - name: Launch container
      run: |
        sudo lxc launch $IMAGE_NAME $CONTAINER_NAME

        sudo lxc exec $CONTAINER_NAME -- /bin/sh -c 'echo search lxd >>/etc/resolv.conf'
        host_ip=$(lxd init --dump | grep ipv4.address | head -1 | cut -d: -f2 | tr -d ' ' | awk -F/ '{print $1}')
        echo $host_ip
        sudo lxc exec $CONTAINER_NAME -- /bin/sh -c 'echo nameserver '8.8.8.8' >>/etc/resolv.conf'
        sudo lxc exec $CONTAINER_NAME -- /bin/sh -c 'cat /etc/resolv.conf || true'

    - name: Waiting for network
      run: |
        sudo lxc exec $CONTAINER_NAME -- timeout 2m /bin/sh -c 'echo waiting for network; until ping -c 1 google.com &>/dev/null; do sleep 1; done'
        sudo lxc exec $CONTAINER_NAME -- /bin/sh -c 'ping -c 1 google.com'
        sudo lxc exec $CONTAINER_NAME -- /bin/sh -c 'dig -t A google.com 8.8.8.8'

    - name: Invoke test
      run: |
        sudo lxc file push $TEST_FILE $CONTAINER_NAME/tmp/
        sudo lxc exec $CONTAINER_NAME -- /bin/sh -x /tmp/$TEST_FILE
