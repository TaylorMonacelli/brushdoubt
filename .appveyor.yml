image: Ubuntu2004
build: "off"
init:
- sh: curl -sflL https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh | bash -e -
environment:
  APPVEYOR_SSH_KEY: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFp48yQviDu3U2mGdwv7CO3O84IAj4LJUXzyGbs6mT0q taylor
  matrix:
  - DISTRO: ubuntu
    DISTRO_FILE: image-ubuntu.yaml
    IMAGE_NAME: local-ubuntu-image
    CONTAINER_NAME: ubuntu
    ARCH: amd64
    RELEASE: focal
    TEST_FILE: ubuntu.sh
  - DISTRO: amazonlinux
    DISTRO_FILE: image-amazonlinux.yaml
    IMAGE_NAME: local-amazon-image
    CONTAINER_NAME: amazon
    ARCH: x86_64
    RELEASE: 2.0.20220606.1
    TEST_FILE: amazonlinux.sh
  - DISTRO: alpinelinux
    DISTRO_FILE: image-alpine.yaml
    IMAGE_NAME: local-alpine-image
    CONTAINER_NAME: alpine
    ARCH: x86_64
    RELEASE: 3.17
    TEST_FILE: alpine.sh
matrix:
  fast_finish: false
install:
- sudo apt-get update >/dev/null
- sudo snap install distrobuilder --classic >/dev/null
- sudo apt-get -y install lxc debootstrap squashfs-tools awscli >/dev/null
- lxd init --auto
- lxd init --dump
- lxc profile show default
#- lxc network set UPLINK dns.nameservers=8.8.8.8
- echo DISTRO=$DISTRO CONTAINER_NAME=$CONTAINER_NAME DISTRO_FILE=$DISTRO_FILE ARCH=$ARCH
- rm -f lxd.tar.xz rootfs.squashfs
- sudo distrobuilder build-lxd $DISTRO_FILE -o image.architecture=$ARCH -o image.release=$RELEASE
- lxc image import lxd.tar.xz rootfs.squashfs --alias $IMAGE_NAME
- lxc image list
- sudo cat /etc/resolv.conf
- ping -c 1 google.com
- lxc launch $IMAGE_NAME $CONTAINER_NAME
- lxc exec $CONTAINER_NAME -- /bin/sh -c 'ls -la'
- lxc exec $CONTAINER_NAME -- /bin/sh -c 'cat /etc/resolv.conf || true'
- |
    host_ip=$(lxd init --dump | grep ipv4.address | head -1 | cut -d: -f2 | tr -d ' ' | awk -F/ '{print $1}')
    echo $host_ip
    lxc exec $CONTAINER_NAME -- /bin/sh -c 'echo search lxd >>/etc/resolv.conf'
    lxc exec $CONTAINER_NAME -- /bin/sh -c 'echo nameserver '$host_ip' >>/etc/resolv.conf'
- lxc exec $CONTAINER_NAME -- /bin/sh -c 'cat /etc/resolv.conf'
- lxc file push $TEST_FILE $CONTAINER_NAME/tmp/
- lxc exec $CONTAINER_NAME -- /bin/sh -x /tmp/$TEST_FILE
- lxc exec $CONTAINER_NAME -- /bin/sh -c 'ping -c 1 google.com'
- lxc exec $CONTAINER_NAME -- /bin/sh -c 'dig -t A google.com 8.8.8.8'
- lxc exec $CONTAINER_NAME -- timeout 2m /bin/sh -c 'echo waiting for newtork; until ping -c 1 google.com &>/dev/null; do sleep 1; done'
